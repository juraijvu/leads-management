"""Add aug 11  with trainer , payment

Revision ID: 4ffeb6f9a1b6
Revises: 9cbf6982aacb
Create Date: 2025-08-11 14:09:11.328711

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4ffeb6f9a1b6'
down_revision = '9cbf6982aacb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payment_provider',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('api_key', sa.String(length=500), nullable=True),
    sa.Column('api_secret', sa.String(length=500), nullable=True),
    sa.Column('environment', sa.String(length=20), nullable=True),
    sa.Column('webhook_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_name', sa.String(length=200), nullable=False),
    sa.Column('company_email', sa.String(length=120), nullable=False),
    sa.Column('company_phone', sa.String(length=20), nullable=False),
    sa.Column('company_address', sa.Text(), nullable=True),
    sa.Column('tax_registration_number', sa.String(length=50), nullable=True),
    sa.Column('payment_terms', sa.Text(), nullable=True),
    sa.Column('invoice_notes', sa.Text(), nullable=True),
    sa.Column('default_currency', sa.String(length=5), nullable=True),
    sa.Column('auto_send_receipts', sa.Boolean(), nullable=True),
    sa.Column('payment_reminder_enabled', sa.Boolean(), nullable=True),
    sa.Column('payment_reminder_days', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trainer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('specialization', sa.String(length=200), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('class_schedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trainer_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('class_date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('class_type', sa.String(length=20), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('online_link', sa.String(length=500), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_cancelled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['trainer_id'], ['trainer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trainer_course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trainer_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['trainer_id'], ['trainer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lead_quote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lead_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('quoted_amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('valid_until', sa.Date(), nullable=False),
    sa.Column('quote_notes', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['lead_id'], ['lead.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('class_student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('class_schedule_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('attendance_status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['class_schedule_id'], ['class_schedule.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_link',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lead_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=5), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('payment_url', sa.String(length=1000), nullable=True),
    sa.Column('payment_reference', sa.String(length=200), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('webhook_data', sa.Text(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['lead_id'], ['lead.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['payment_provider.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('payment_reference')
    )
    with op.batch_alter_table('attendance_record', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'student', ['student_id'], ['id'])

    with op.batch_alter_table('corporate_training', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'user', ['created_by_id'], ['id'])

    with op.batch_alter_table('lead', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'course', ['course_interest_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['created_by_id'], ['id'])

    with op.batch_alter_table('lead_interaction', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'lead', ['lead_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['created_by_id'], ['id'])

    with op.batch_alter_table('meeting', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'student', ['student_id'], ['id'])
        batch_op.create_foreign_key(None, 'lead', ['lead_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['created_by_id'], ['id'])

    with op.batch_alter_table('student', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'course', ['course_id'], ['id'])
        batch_op.create_foreign_key(None, 'lead', ['lead_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('student', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('meeting', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('lead_interaction', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('lead', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('corporate_training', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('attendance_record', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    op.drop_table('payment_link')
    op.drop_table('class_student')
    op.drop_table('lead_quote')
    op.drop_table('trainer_course')
    op.drop_table('class_schedule')
    op.drop_table('trainer')
    op.drop_table('payment_settings')
    op.drop_table('payment_provider')
    # ### end Alembic commands ###
